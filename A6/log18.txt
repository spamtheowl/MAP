Id: 1

Execution stack: 
((v=10; new(a, 22)); (fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a)))))

Symbol Table: 

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
(v=10; new(a, 22))
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
(v=10; new(a, 22))
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
v=10
new(a, 22)
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
v=10
new(a, 22)
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
new(a, 22)
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 
v=>10

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
new(a, 22)
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 
v=>10

Output: 

File Table:


Heap:

Id: 1

Execution stack: 
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
(fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a))))))
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
fork((write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a))))))
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 2

Execution stack: 
(write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 2

Execution stack: 
(write(a, 3); (fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a)))))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
print (v)
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 2

Execution stack: 
write(a, 3)
(fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
print (v)
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 2

Execution stack: 
write(a, 3)
(fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 

File Table:


Heap:
1=>22

Id: 1

Execution stack: 
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 
10

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
(fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 
10

File Table:


Heap:
1=>3

Id: 1

Execution stack: 
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 
10

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
(fork(((write(a, 3); v=31); (print (v); print (read(a))))); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 
10

File Table:


Heap:
1=>3

Id: 1

Execution stack: 

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
fork(((write(a, 3); v=31); (print (v); print (read(a)))))
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
fork(((write(a, 3); v=31); (print (v); print (read(a)))))
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
((write(a, 3); v=31); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
((write(a, 3); v=31); (print (v); print (read(a))))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
print (v)
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
(write(a, 3); v=31)
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
print (v)
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
(write(a, 3); v=31)
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
write(a, 3)
v=31
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10

File Table:


Heap:
1=>3

Id: 2

Execution stack: 
print (read(a))

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
write(a, 3)
v=31
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10

File Table:


Heap:
1=>3

Id: 2

Execution stack: 

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
v=31
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
v=31
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>10

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
(print (v); print (read(a)))

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
print (v)
print (read(a))

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
print (v)
print (read(a))

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
print (read(a))

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3
31

File Table:


Heap:
1=>3

Id: 3

Execution stack: 
print (read(a))

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3
31

File Table:


Heap:
1=>3

Id: 3

Execution stack: 

Symbol Table: 
a=>1
v=>31

Output: 
10
3
10
3
31
3

File Table:


Heap:
1=>3

